{
  "name" : "Kasper Janssens",
  "personal" : {
     "address" : "Ottergemsesteenweg 354, 9000 Gent, Belgium",
     "date of birth" : "12 June 1981"
  },
  "telephone" : "+32 495 61 45 92",
  "email" : "kasper@krondorsoft.com",
  "website" : "www.krondorsoft.com",
  "education" : {
    "degree" : "Civil engineer in computer sciences, major in computer architecture",
    "from" : "01/10/1999",
    "to": "30/06/2004",
    "school" : "University of Ghent",
    "these" : ["I implemented a firewall on the Intel IXP1200 network process, using Netfilter as a guidance beacon. This processor has six cores that do the work, and one core that controls the other six.", "Each of the cores can run four threads, with easy context switching, one clock cycle, through a small amount of registers. This unfortunately limits the amount of variables used in programs, making very careful programming an absolute necessity.", "The controlling core is responsible for handling all exceptions and tasks and is programmed in C. The other processors were programmed in assembler. "]
  },
  "bio" : "I am an experienced developer with a fondness for strongly typed, compiled languages. I focus on application design and testability. Passionate about open source, Hadoop committer, big data expert",
  "hobbies" : ["Tango", "Salsa", "Programming", "Reading", "Gaming", "Gardening"],
  "experiences": {
      "Unifly" : {
        "description" : "Unifly has a platform to schedule and execute drone flights, taking into account other air traffic as well as temporary impediments in the air such as large cranes. They needed to transition from doing a lot of project work to making a more structured project. Their current code base needed to be cleaned up and culled of all non essential stuff. My task was to plan and execute this clean up/culling. After this, I needed to assist in finetuning the product, taking into account cost of operation.",
        "roles" :[ {
           "title" : "Product architect",
           "from" : "01/11/2020",
           "description" : ["Java, Spring, Gradle, docker, devops, plant, structure101"]
        }]
      },
      "Barco" : {
        "description" : "Barco sells a product that is ued in operation rooms. They deliver hardware and software to manage camera-assisted surgeries. The software needs to steer the hardware, select the camera feeds for instance, and make sure that the correct feed is visible on the correct screen, with extremely low latency. Latency can really screw up a surgery because the surgeon then gets the wrong feedback on camera",
        "roles" :[ {
           "title" : "Software engineer",
           "from" : "24/04/2020",
           "to" : "31/10/2020",
           "description" : ["Java, Spring, Maven, docker"]
        }]
      },
      "Open IO" : {
        "description" : "Open IO is a company that makes an open source object storage system. They want an automatic performance test setup to be able to run performance tests on major and minor code changes, as well as have the possibility to run performance tests on large realistic use cases to use in marketing. The latter was my main focus. Cloud compute machines are being used to quickly ramp up performance tests and specific realistic use cases at a feasible price point, in this case google cloud. Achieved automatic setup of small cluster.",
        "roles" :[ {
           "title" : "Performance test devops engineer",
           "from" : "25/02/2020",
           "to" : "25/03/2020",
           "description" : ["Ansible, Python, Google cloud, terraform, docker"]
        }]
      },
      "Cargill" : {
        "description" : "Cargill is a big food concern. Their R&D department needed some software to complement their lab software to make it easier to launch and manage experiments. The experiments are done through pieces of python code that make calls to a web server that my application provides. The web server offers a UI and also calls into the existing lab software through REST. Fixed price project. Achieved a higher comfort for the R&D engineers and far less failed test runs (the exact percentage is still under calculation)",
        "roles" :[ {
           "title" : "Everything",
           "from" : "23/01/2020",
           "to" : "24/02/2020",
           "description" : ["React, docker, sqlite, Haskell"]
        }]
      },
      "Crescent" : {
        "description" : "Crescent is an IoT software provider that develops custom software for IoT environments, in Scala",
        "roles" :[ {
           "title" : "Scala Team Lead and Architect",
           "from" : "01/11/2019",
           "to" : "14/01/2020",
           "description" : [" Team lead and architect. Designed and developed custom scala software","Java, Graphql, ReasonML, React, docker, Google Cloud Platform, gRPC"]
        }]
      },
      "Western Digital" : {
	"description" : "Amplidata is a startup in the big data storage sector. They have developed a software product to store and retrieve data at high speeds and high safety, meaning that the chance of losing data as a cause of disasters is nearly non-existent. Amplidata got acquired by Western Digital March 2015. The architecture is that of a large distributed system, with lots of smaller servers needing to work together, perform master election, achieve high throughput through utilising multiple machines and their full network bandwidth. ",
	"roles" : [
        {
           "title" : "Streaming Containerization in Java",
           "from" : "01/07/2018",
           "to" : "04/06/2019",
           "description" : ["Like a lot of the object storage architectures, disaster recovery tends to be proportional to the size of the metadata and as such the amount of managed objects. The goal of this project is to keep the amount of managed objects small through containerization, but of course still being able to retrieve the smaller objects. Targets got achieved with minimal latency.","Java, rx-java, parallel and concurrent programming, maven, clover, jenkins, junit, gRPC, docker"]
        },
        {
           "title" : "Java Hadoop HDFS developer",
           "from" : "01/03/2018",
           "to" : "30/06/2018",
           "description" : ["Because of customer requirements to integrate the data storage with Hadoop we started development, together with a team at Microsoft, to write a HDFS extension so we could attach one of our storage systems to a datanode and use the data present in the storage system in Hadoop calculations. Contributed to the open source project, contributions merged in to trunk of Hadoop", "Java, maven, junit, gRPC, Avro, Hadoop, docker, git"]
        },
        {
           "title": "OCaml developer",
           "from": "01/09/2016",
           "to": "28/02/2018",
           "description": ["Maintenance, performance tweaks, some refactors and a few more features on the core product, the object store. The main issue in the application was a lack of testability, and of course tests, as well as performance and scaling. Luckily due to the strong type system, refactors are really predictable and as such this was a reasonably painless experience with successful outcomes.", "OCaml, ounit, coq, distributed programming, high throughput, docker, git, mercurial, nosql"]
        },
        {
           "title" : "Haskell developer",
           "from" : "01/09/2015",
           "to" : "31/08/2016",
           "description" : [" Development of the next-gen storage product (the one that used to be written in OCaml). Due to the high parallelism and fast io subsystem in the language we chose to write it in Haskell.", "Haskell, mio, distributed programming, high troughput, resource management, git"]
        },
        {
           "title": "OCaml developer",
           "from": "21/05/2013",
           "to": "31/08/2015",
           "description": ["The core product, the object store. The main difficulties of the software lie in the technical complexity of the software itself, multiprocessing, high parallellism and the very high impact of bugs. Achieved performance goals and hardened the product.", "OCaml, ounit, coq, distributed programming, high throughput, docker, git, mercurial, nosql"]
        }
      ]
     },
     "Cegeka" : {
      "description" : "Cegeka is a service company the implements large business-web projects on demand and on site. They are very focused on agile, extreme programming and DDD. The complexity often lies in understanding the business context and managing changing requirements in the complex context. Most of my time over there was spent in a banking and insurances environment.",
      "roles" : [
     {
        "title" : "Android developer",
        "from" : "01/09/2011",
        "to" : "15/03/2013",
        "description" : ["I participated in the Android competence center and we developed a SocialText mobile application. SocialText is a Facebook-like application that mostly focuses on information sharing in a professional environment, without mobile version. The goal was to try to build one and if it turns out to be polished enough, sell it. A second team was working on an iOS version.", "Android, java, mobile"]
     },
      {
        "title" : "Java developer",
        "from" : "01/10/2010",
        "to" : "20/05/2013",
        "description" : [" Worked in the agile teams concerned with insurance and office management applications at Argenta. The challenge was having about 30 devs working on the same code base. Developed on the core products and helped achieving a better way of collaborating with all those developers on one code base through a better use of CI/CD and source versioning.", "spring, hibernate, javascript, java, oracle, junit, maven, gradle, jenkins, git, XP, TDD, DDD, Hibernate, JDBC, Mockito, Webdriver, Selenium, Spring MVC, log4j, Spring WebFlow, REST, sql, Hibernate, nexus, sonar, CQRS"]
     }
    ]
    },
    "Proximus" : {
      "description" : "Proximus/Belgacom are one of two main players in the Belgian telecom business. I worked on their middleware and on their end to end test infrastructure. The challenges were mainly the size of the company and the amount of stake holders that need to be involved",
      "roles" : [
      {
        "title": "Java Developer",
        "from": "01/04/2008",
        "to": "30/09/2010",
        "description" : ["When I arrived, Proximus was in a transition phase of going from a more point-to-point approach to a full-blown SOA approach to their middleware. The challenge here was communication. Achieved better understanding between the business teams and the middleware and a more reliable middleware experience as a result.", "Java, Junit, Oracle, Tibco message queue,  XML, XSD, XSLT, maven, jenkins, weblogic, functional analysis, technical analysis, architecture, JAXB, JAX-WS, SOAP, REST, UML, JMS, log4j, sql, Hibernate"]
      },
      {
        "title": "Operational Architect",
        "from": "01/01/2007",
        "to": "31/11/2007",
        "description" : ["Managing the end to end testing infrastructure of Proximus. This was mainly the set up of the UNIX servers, the Oracle and Sybase databases, the firewalls and network configuration, the Weblogic servers. The challenge was the large amount of stake holders with conflicting interests", "Achieved a smooth end to end testing process with a minimum amount of delays in provisioning."]
      },
      {
        "title": "C/C++ developer",
        "from": "01/07/2006",
        "to": "31/12/2006",
        "description" : ["I worked at the team responsible for Charging.", "C++, Unix, Oracle, Sybase, technical analysis"]
      },
      {
        "title": "C/C++ developer",
        "from": "21/01/2005",
        "to": "30/06/2006",
        "description" : ["I worked on the order management system middleware. This processed all transactions that were done in the belgacom shops.", "Achieved adequate performance for the shops to be able to run normally even during the busy periods", "C++, Unix, Oracle, functional analysis, technical analysis"]
      }
    ]
    },
    "ING" : {
      "description" : "ING is a large Dutch bank. I was mainly involved in the part that manages the ATMs. The challenge here was the time pressure as there was only 4 months available for the application to be finished and no other developer than me could be recruited in time to be added to the team. As such I was the only developer and had to get the whole project done. The application is meant to run on an ATM at offices of ING and is meant to perform all transactions except cash transaction, so no money withdrawal.",
      "roles" : [
      {
        "title": "C++ Developer",
        "from": "15/12/2007",
        "to": "31/03/2008",
        "description" : [ "My role in the process was the analysis, design and implementation of the “hardware” part of the application, so the drivers for the card reader, the pin pad, the touch screen and the printer. Achieved fully working software on spec with two weeks left on the time budget", "C++, windows, hardware"]
      }
      ]
    },
    "Thomson-Reuters": {
      "description" : "I mainly worked for the part of Thomson-Reuters that is involved in trademarks. The service that they provide is best described as trademark protection, keeping an eye out for all published brands in the world and comparing them to other well known brands to see whether there could be infringement.",
      "roles" : [
      {
        "title": "Java Developer",
        "from": "01/10/2008",
        "to": "31/01/2009",
        "description" : ["Migrating a C++ fat client to a Java Swing fat client. In parallel with my java dev job at Proximus."]
      },
      {
        "title": "C++ Developer",
        "from": "15/12/2007",
        "to": "31/11/2008",
        "description" : ["Developing a self learning neural network for image recognition. The neural network needed to be able to recognize different fonts of letters, different alphabets (for example for Chinese publications) and be able to treat a lot of skew and dirt specks on the publications, as some are really low quality print, and get even lower quality after scanning them in."]
      }
    ]
    }
  }
}

